services:
  db:
    image: postgres:latest
    container_name: recipe_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: recipeappdb
    ports:
      - "5433:5432"
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
        interval: 10s
        timeout: 5s
        retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: recipe_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 5s
        retries: 5
    restart: unless-stopped

  web:
    build: .
    container_name: recipe_api
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  worker:
    build: .
    container_name: recipe_worker
    env_file:
      - .env
    volumes:
      - .:/app
    command: celery -A app.core.celery_app.celery worker --loglevel=INFO -P gevent
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
